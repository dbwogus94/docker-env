version: '3.6'

# 런 이후 작업
# 1. 프로메테우스에서 필요한 데이터 모두 가져오는지 확인
# 2. 그라파나에서 jmx-exporter를 모니터링할 대시보드 import - 대시보드 id: 721
# 3. 그라파나에서 kafka-exporter를 모니터링할 대시보드 import - 대시보드 id: 7589

# TODO: 카프카 연동 설정 하나의 방식으로 통일해야 한다.
# - jmx-exporter : 브로커에 에이전트로 설치 후 프로메테우스 설정 파일에 브로커 ip로 직접 매핑
# - kafka-exporter : 도커 컴포즈 파일 커멘드에 직접 명시
# - kafka-lag-exporter : 설정 파일을 따로 만들어서 주입

# TODO: 호스트 IP 환경변수로 설정하는 과정중 실패한 파일
# - kafka-lag-exporter/application.conf
# - prometheus/prometheus.yml

# TODO: 남은 모니터링 - node-exporter, nginx-exporter, postgresql-exporter

volumes:
  prometheus_data-2: {}
  grafana_data-2: {}

services:
  kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka-exporter
    hostname: kafka-exporter
    restart: always
    ports:
      - '9308:9308'
    command: --kafka.server=${HOST_IP}:9095 --kafka.server=${HOST_IP}:9096

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.4.0
    container_name: kafka-lag-exporter
    hostname: kafka-lag-exporter
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - './kafka-lag-exporter:/opt/docker/conf/'
    command: ['/opt/docker/bin/kafka-lag-exporter', '-Dconfig.file=/opt/docker/conf/application.conf', '-Dlogback.configurationFile=/opt/docker/conf/logback.xml']
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'

  prometheus:
    image: prom/prometheus:v2.29.0
    container_name: prometheus
    hostname: prometheus
    restart: always
    ports:
      - 29002:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data-2:/prometheus
    depends_on:
      - kafka-lag-exporter
      - kafka-exporter
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.route-prefix=/'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      # - '--enable-feature=expand-external-labels'
  grafana:
    image: grafana/grafana:7.0.4
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - '29003:3000'
    volumes:
      - grafana_data-2:/var/lib/grafana:rw
      - ./grafana/custom.ini:/etc/grafana/custom.ini:ro
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom.ini
    depends_on:
      - prometheus
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'
